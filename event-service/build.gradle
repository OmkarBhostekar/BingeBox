plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.bingebox'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	springGrpcVersion = '2.15.0.RELEASE'
	springCloudVersion = '2023.0.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	// Internal module
	implementation project(":commons")

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Database + Migration
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core:9.16.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation "net.devh:grpc-server-spring-boot-starter:$springGrpcVersion"
	testImplementation "net.devh:grpc-client-spring-boot-starter:$springGrpcVersion"
	
	// Spring Cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
}

tasks.withType(Test).configureEach {
	useJUnitPlatform()
}
