services:
  discovery-service:
    build:
      context: .
      dockerfile: discovery-service/Dockerfile
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8761"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - bingebox-network

  venue-service:
    build:
      context: .
      dockerfile: venue-service/Dockerfile
    container_name: venue-service
    ports:
      - "8082:8082"
      - "9090:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://venue-db:5432/venue_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=secret
    depends_on:
      discovery-service:
        condition: service_healthy
      venue-db:
        condition: service_healthy
    networks:
      - bingebox-network

  venue-db:
    image: postgres:16-alpine
    container_name: venue-db
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=venue_db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
    volumes:
      - venue_data:/var/lib/postgresql/data
    networks:
      - bingebox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d venue_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  event-service:
    build:
      context: .
      dockerfile: event-service/Dockerfile
    container_name: event-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://event-db:5432/event_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=secret
    depends_on:
      venue-service:
        condition: service_started
      discovery-service:
        condition: service_healthy
      event-db:
        condition: service_healthy
    networks:
      - bingebox-network

  event-db:
    image: postgres:16-alpine
    container_name: event-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=event_db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
    volumes:
      - event_data:/var/lib/postgresql/data
    networks:
      - bingebox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d event_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  booking-service:
    build:
      context: .
      dockerfile: booking-service/Dockerfile
    container_name: booking-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://booking-db:5432/booking_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=secret
    depends_on:
      discovery-service:
        condition: service_healthy
      booking-db:
        condition: service_healthy
    networks:
      - bingebox-network

  booking-db:
    image: postgres:16-alpine
    container_name: booking-db
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=booking_db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
    volumes:
      - booking_data:/var/lib/postgresql/data
    networks:
      - bingebox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d booking_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  event_data:
  venue_data:
  booking_data:

networks:
  bingebox-network:
    driver: bridge
